@import "Site/static/styles.scss";
$r: calc(1em + 1vmin);
@function moreblue($color, $percent) {
  @return mix($blue, $color, $percent);
}
@function morered($color, $percent) {
  @return mix($red, $color, $percent);
}
@function moregreen($color, $percent) {
  @return mix($green, $color, $percent);
}
@mixin eqw($min, $max) {
  @for $i from $min through $max {
    &:first-child:nth-last-child(#{$i}),
    &:first-child:nth-last-child(#{$i}) ~ * {
      width: 1 / $i * 100%;
    }
  }
}
@mixin eqwmd($min, $max) {
  @for $i from $min through $max {
    &:first-child:nth-last-child(#{$i}),
    &:first-child:nth-last-child(#{$i}) ~ * {
      width: 1 / $i * 50%;
    }
  }
}
@mixin eqwsm($min, $max) {
  @for $i from $min through $max {
    &:first-child:nth-last-child(#{$i}),
    &:first-child:nth-last-child(#{$i}) ~ * {
      width: 1 / $i * 35%;
    }
  }
}
@mixin threeD(
  $inset: null,
  $size: 5,
  $x: 0,
  $y: 0,
  $blur: 30,
  $spread: -7.5,
  $color1: transparent,
  $color2: black
) {
  $shadows: ();
  @for $i from 1 through $size {
    $single-shadow: "#{$x*$i+-($i/2)}px #{$y*$i+-($i/2)}px #{$blur+($i*.25)}px #{$spread+($i*.25)}px #{transparentize(mix($color1,$color2,1/$i*100%),$i/$size)}";
    $shadows: join($shadows, $single-shadow, comma);
  }
  box-shadow: $inset #{$shadows};
}
@mixin threeDtxt(
  $size: 3,
  $x: -1,
  $y: -0.75,
  $blur: 2,
  $color1: transparent,
  $color2: black
) {
  $shadows: ();
  @for $i from 1 through $size {
    $single-shadow: "#{$x*$i+-($i/2)}px #{$y*$i+-($i/2.5)}px #{$blur+($i*.5)}px #{transparentize(mix($color1,$color2,0.5/$i*100%),$i/$size)}";
    $shadows: join($shadows, $single-shadow, comma);
  }
  text-shadow: #{$shadows};
}
@mixin slowtransition {
  transition-duration: 0.75s;
  transition-property: all;
  transition-timing-function: cubic-bezier(1.25, 0, 2, 0.25);
}
@mixin transition {
  transition-duration: 0.25s;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.65, 0.25, 0.15, 0.95);
}
@mixin fasttransition {
  transition-duration: 0.05s;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.25, 0, 0.5, 0.25);
}
@mixin growfont($grow: 1em) {
  @include transition;
  font-size: #{$grow};

  &:hover {
    font-size: #{$grow * 1.1};
  }
}
@mixin tooltip(
  $content,
  $right: false,
  $left: false,
  $top: false,
  $bottom: false
) {
  &:after {
    content: $content;
    @include fasttransition;
    @include threeD;
    position: absolute;
    height: 0;
    width: 0;
    opacity: 0;
    font-size: 60%;
    padding: 0.5rem;
    border-radius: 0.5rem;
    z-index: 2;
    @if $right {
      left: 2.5rem;
      bottom: 0;
    }
    @if $bottom {
      left: 0;
      bottom: -4rem;
    }
  }

  &:before {
    position: absolute;
    content: " ";
    @include fasttransition;
    @include threeD;
    transform: rotate(45deg);
    width: 0;
    height: 0;
    opacity: 0;
    z-index: 2;
    @if $right {
      left: 2.25rem;
      bottom: 1.15rem;
    }
    @if $bottom {
      bottom: -1rem;
    }
  }

  &:hover {
    &:after {
      transition-delay: 0.4s;
      height: 3rem;
      width: 6rem;
      opacity: 1;
    }

    &:before {
      transition-delay: 0.4s;
      height: 0.75rem;
      width: 0.75rem;
      opacity: 1;
    }
  }
}
@mixin simpleunderline($text-decoration: none) {
  position: relative;
  text-decoration: $text-decoration;
  @include threeDtxt($size: 1);
  @include transition;
  &:before {
    content: "";
    position: absolute;
    height: 2px;
    width: 100%;
    bottom: 0;
    left: 0;
    visibility: hidden;
    transform: scaleX(0);
    @include transition;
  }
  &:hover {
    @include threeDtxt;
    @include transition;
    &:before {
      visibility: visible;
      transform: scale(1);
    }
  }
}
@mixin underline($font-size: 1em, $text-decoration: none, $simple-override: 0) {
  & > * {
    @include threeDtxt($size: 1);
    @include transition;
    position: relative;
    font-size: $font-size;
    text-decoration: $text-decoration;

    &:before {
      content: "";
      position: absolute;
      height: 2px;
      width: 100%;
      bottom: 0;
      left: 0;
      visibility: hidden;
      transform: scaleX(0);
      @include transition;
    }
  }

  &:hover {
    & > * {
      @include threeDtxt($size: 1);
      @include transition;

      &:before {
        visibility: visible;
        transform: scale(1);
      }
    }

    @if $simple-override > 0 {
      /* in case applied to <a>,
      where the simpleUnderline mixin is applied by default,
      we want to override to not get two underlines */
      &:before {
        visibility: hidden;
      }
    }
  }
}
@mixin btn($bdrds: 0.15em, $font-size: 1em) {
  padding: 0.25em;
  border-radius: $bdrds;
  cursor: pointer;
  @include transition;
  font-family: $f1;

  &:active {
    @include threeD(inset);
  }

  &:focus {
    box-shadow: none;
  }

  &:active,
  &:focus {
    outline: 0;
    outline: none;
    border: none;
    border-color: transparent;
  }
}
@mixin txtBtn(
  $decoration: none,
  $weight: 600,
  $padding: 0.05em,
  $margin: 0.05em,
  $fontfamily: $f1
) {
  text-decoration: $decoration;
  padding: $padding;
  margin: $margin;
  font-family: $fontfamily;
  font-weight: $weight;
}
@mixin aTypical {
  @include threeDtxt(5, 0.5, 0.5, 0.5);
  text-decoration: none;
  @include transition;
}
@mixin txtArea($clr: inherit) {
  background-color: $clr;
  @include threeD(15, 1, -1, 0, 0, $clr);
}
@mixin mq($media) {
  @media screen and (max-width: $media) {
    @content;
  }
}
@mixin mqmq($max, $min) {
  @media screen and (max-width: $max) and (min-width: $min) {
    @content;
  }
}
@mixin rotate1 {
  transform: rotate(45deg) translate(45%);
  transition-duration: 0.4s;
  transition-timing-function: cubic-bezier(0.42, 0, 1, 2.93);
}
@mixin rotate2 {
  transform: rotate(-45deg) translate(45%);
  transition-duration: 0.4s;
  transition-timing-function: cubic-bezier(0.42, 0, 1, 2.93);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
@keyframes blink {
  0% {
    opacity: 0.1;
  }

  20% {
    opacity: 1;
  }

  100% {
    opacity: 0.1;
  }
}
@keyframes twirl {
  0% {
    transform: rotate3d(0);
  }

  25% {
    transform: rotate3d(0, 1, 0, 90deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  75% {
    transform: rotate3d(0, 1, 0, 270deg);
  }

  100% {
    transform: rotate3d(0);
  }
}
@keyframes float {
  0% {
    opacity: 0.1;
    padding: 7em 0;
    transform: rotate3d(0, 0, 1, -90deg);
    left: 100%;
  }

  10% {
    opacity: 1;
    transform: rotate3d(0, 0, 1, -80deg);
    padding: 6em 0;
    left: 90%;
  }

  20% {
    transform: rotate3d(0, 0, 1, -70deg);
    padding: 5em 0;
    left: 80%;
  }

  30% {
    transform: rotate3d(0, 0, 1, -60deg);
    padding: 4em 0;
    left: 70%;
  }

  40% {
    transform: rotate3d(0, 0, 1, -50deg);
    padding: 3em 0;
    left: 60%;
  }

  50% {
    transform: rotate3d(0, 0, 1, -40deg);
    padding: 2em 0;
    left: 50%;
  }

  60% {
    transform: rotate3d(0, 0, 1, -30deg);
    left: 40%;
    padding: 1em 0;
  }

  70% {
    transform: rotate3d(0, 0, 1, -20deg);
    padding: 0;
    left: 30%;
  }

  80% {
    transform: rotate3d(0, 0, 1, -10deg);
    opacity: 0.1;
    padding: 0;
    left: 20%;
  }

  90% {
    transform: rotate3d(0);
    padding: 0;
    left: 10%;
  }

  100% {
    opacity: 1;
    padding: 0;
    left: 0;
  }
}
@keyframes pulse {
  0% {
    opacity: 0.25;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0.25;
  }
}
@mixin twirl {
  animation-name: twirl;
  animation-duration: 1000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@mixin spin {
  animation-name: spin;
  animation-duration: 1000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@mixin blink {
  animation-name: blink;
  animation-iteration-count: infinite;
  animation-fill-mode: both;
  animation-duration: 1.4s;
}
@mixin pulseFloat {
  animation: float 15s linear 0s 1, twirl 30s ease-in-out 10s infinite,
    pulse 3s linear 15s infinite;
}
