<?php

function lsp_gallery_meta_box_config() {
  return new LSP_MB([
    'id' => 'lsp_gallery_settings',
    'title' => esc_html__('Gallery Settings', 'lsp'),
    'post_types' => ['lsp_gallery'],
    'context' => 'advanced',
    'priority' => 'high',
    'autosave' => true,
    'assets_url' => 'assets',
    'rest_base' => 'galleries',
    'fields' => [
      [
        'id' => 'lightbox',
        'name' => esc_html__('Display as Lightbox', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('display gallery as lightbox. (images are shown enlarged in popout. see: https://en.wikipedia.org/wiki/Lightbox_(JavaScript))', 'lsp'),
        'checked' => false,
        'value' => 'lightbox',
      ],
      [
        'id' => 'gallery_images',
        'type' => 'media',
        'name' => esc_html__('Gallery Gallery', 'lsp'),
        'description' => esc_html__('upload images to this gallery', 'lsp'),
        'attributes' => [
          'caption' => 'image caption',
          'link' => 'link',
          'target' => false
        ],
        'value' => '',
      ],
      [
        'id' => 'auto',
        'name' => esc_html__('Auto Play', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('automatically start gallery', 'lsp'),
        'checked' => false,
        'value' => 'auto',
      ],
      [
        'id' => 'speed',
        'type' => 'number',
        'name' => esc_html__('Transition Timer', 'lsp'),
        'description' => esc_html__('amount of time between transition animation', 'lsp'),
        'std' => '4500',
        'placeholder' => esc_html__('4500', 'lsp'),
        'min' => '100',
        'max' => '999999999',
        'step' => '100',
        'value' => '',
      ],
      [
        'id' => 'transitionspeed',
        'type' => 'number',
        'name' => esc_html__('Transition Speed', 'lsp'),
        'description' => esc_html__('speed at which the gallery changes from one image to the next', 'lsp'),
        'std' => '1',
        'placeholder' => esc_html__('1', 'lsp'),
        'min' => '0.01',
        'max' => '3600',
        'step' => '0.25',
        'value' => '',
      ],
      [
        'id' => 'animation',
        'name' => esc_html__('Animation', 'lsp'),
        'type' => 'select',
        'description' => esc_html__('the kind of animation', 'lsp'),
        'placeholder' => esc_html__('Select an Item', 'lsp'),
        'options' => [
          'fade',
          'slide',
          'carousel',
          'book',
          'flip',
        ],
        'value' => '',
      ],
      [
        'id' => 'timingfn',
        'type' => 'text',
        'name' => esc_html__('Animation Timing Function', 'lsp'),
        'description' => esc_html__('optional user defined css transition timing function. see: https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function', 'lsp'),
        'std' => 'ease-in-out',
        'placeholder' => esc_html__('ease-in-out', 'lsp'),
        'value' => '',
      ],
      [
        'id' => 'direction',
        'name' => esc_html__('Direction', 'lsp'),
        'type' => 'select',
        'description' => esc_html__('direction for slides to move (if slide animation selected)', 'lsp'),
        'placeholder' => esc_html__('Select an Item', 'lsp'),
        'options' => [
          'left',
          'right',
        ],
        'value' => '',
      ],
      [
        'id' => 'inview',
        'type' => 'number',
        'name' => esc_html__('inview', 'lsp'),
        'description' => esc_html__('images in view (note: carousel animation will always have at least 3, flip and fade will only have 1, and book will only have 2)', 'lsp'),
        'std' => '1',
        'placeholder' => esc_html__('1', 'lsp'),
        'min' => '1',
        'max' => '999999999',
        'step' => '1',
        'value' => '',
      ],
      [
        'id' => 'advance',
        'type' => 'number',
        'name' => esc_html__('advance', 'lsp'),
        'description' => esc_html__('images to advance per animation (note: carousel and book animation will only advance by 1)', 'lsp'),
        'std' => '1',
        'placeholder' => esc_html__('1', 'lsp'),
        'min' => '1',
        'max' => '999999999',
        'step' => '1',
        'value' => '',
      ],
      [
        'id' => 'thumbnails',
        'name' => esc_html__('Display Thumbnails', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('show captions on slides', 'lsp'),
        'checked' => false,
        'value' => 'thumbnails',
      ],
      [
        'id' => 'showcaptions',
        'name' => esc_html__('Display Captions', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('show captions on slides', 'lsp'),
        'checked' => false,
        'value' => 'showcaptions',
      ],
      [
        'id' => 'linkslides',
        'name' => esc_html__('Link Slides', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('link slides?', 'lsp'),
        'checked' => false,
        'value' => 'linkslides',
      ],
      [
        'id' => 'contain',
        'name' => esc_html__('Contain', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('contain entire image in slide (do not zoom and crop image)', 'lsp'),
        'checked' => false,
        'value' => 'contain',
      ],
      [
        'id' => 'arrows',
        'name' => esc_html__('Arrows', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('next and previous arrow controls', 'lsp'),
        'checked' => false,
        'value' => 'arrows',
      ],
      [
        'id' => 'playpause',
        'name' => esc_html__('Play and Pause Toggle', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('pause and play controls', 'lsp'),
        'checked' => false,
        'value' => 'playpause',
      ],
      [
        'id' => 'pauseonhover',
        'name' => esc_html__('Pause On Hover', 'lsp'),
        'type' => 'checkbox',
        'description' => esc_html__('pause slide on hover', 'lsp'),
        'checked' => false,
        'value' => 'pauseonhover',
      ],
      [
        'id' => 'playicon',
        'name' => esc_html__('Play Icon', 'lsp'),
        'type' => 'text',
        'description' => esc_html__('icon for play', 'lsp'),
        'placeholder' => '&#9654;',
        'std' => '&#9654;',
        'value' => '',
      ],
      [
        'id' => 'pauseicon',
        'name' => esc_html__('Pause Icon', 'lsp'),
        'type' => 'text',
        'description' => esc_html__('icon for pause', 'lsp'),
        'placeholder' => '&#9208;',
        'std' => '&#9208;',
        'value' => '',
      ],
      [
        'id' => 'nexticon',
        'name' => esc_html__('Next Arrow Icon', 'lsp'),
        'type' => 'text',
        'description' => esc_html__('icon for next arrow', 'lsp'),
        'placeholder' => '&#8250;',
        'std' => '&#8250;',
        'value' => '',
      ],
      [
        'id' => 'previcon',
        'name' => esc_html__('Previous Arrow Icon', 'lsp'),
        'type' => 'text',
        'description' => esc_html__('icon for previous arrow', 'lsp'),
        'placeholder' => '&#8249;',
        'std' => '&#8249;',
        'value' => '',
      ],
      [
        'id' => 'tag',
        'name' => esc_html__('Image Tag', 'lsp'),
        'type' => 'text',
        'description' => esc_html__('html tag to render images in. defaults to "div" (as background-image). use "img" for standard image tag if necessary.', 'lsp'),
        'placeholder' => 'div',
        'std' => 'div',
        'value' => '',
      ],
    ],
  ]);
}

add_action('save_post', [lsp_gallery_meta_box_config(), 'lsp_save_meta_box'], 1, 2);
add_action('add_meta_boxes', [lsp_gallery_meta_box_config(), 'lsp_add_meta_box']);
